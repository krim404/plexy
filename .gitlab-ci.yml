stages:
  - build
  - push
  - scan
  - code_quality
  - safety
  - cleanup

variables:
  AFTER_SCRIPT_IGNORE_ERRORS: "true"
  IMAGE_NAME: $HARBOR_HOST/library/$CI_PROJECT_NAME

build:
  image: docker:27.2.1
  stage: build
  services:
    - docker:27.2.1-dind
  before_script:
    - docker login -u $HARBOR_USERNAME -p $HARBOR_PASSWORD $HARBOR_HOST
  script:
    - docker build -t $IMAGE_NAME:$CI_COMMIT_REF_SLUG .


trivy_scan:
  stage: scan
  image: 
    name: aquasec/trivy:latest
    entrypoint: [""]
  script:
    - trivy image --exit-code 1 --ignore-unfixed --severity HIGH,CRITICAL $IMAGE_NAME:$CI_COMMIT_REF_SLUG
  allow_failure: true
  rules:
    - if: $CI_COMMIT_BRANCH != $CI_DEFAULT_BRANCH

code_quality:
  stage: code_quality
  image: python:3.12
  before_script:
    - pip install flake8
  script:
    - flake8 .
  allow_failure: true
  rules:
    - if: $CI_COMMIT_BRANCH != $CI_DEFAULT_BRANCH

safety:
  stage: safety
  image: python:3.12
  before_script:
    - pip install safety
  script:
    - safety check
  allow_failure: true
  rules:
    - if: $CI_COMMIT_BRANCH != $CI_DEFAULT_BRANCH

push:
  stage: push
  image: docker:27.2.1
  services:
    - docker:27.2.1-dind
  before_script:
    - docker login -u $HARBOR_USERNAME -p $HARBOR_PASSWORD $HARBOR_HOST
  script:
    - docker buildx create --use --name builder_$CI_PROJECT_NAME
    - docker buildx build --platform linux/amd64,linux/arm64 -t $IMAGE_NAME:$CI_COMMIT_REF_SLUG -t $IMAGE_NAME:latest --push . 
  rules:
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH

cleanup-job:
  stage: cleanup
  image: docker:27.2.1
  services:
    - docker:27.2.1-dind
  allow_failure: true
  script:
    - docker buildx stop builder_$CI_PROJECT_NAME || true
    - docker buildx rm builder_$CI_PROJECT_NAME || true
  when: always
